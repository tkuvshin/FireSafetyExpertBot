import os
import json
from flask import Flask, request
import telegram
from telegram.ext import Dispatcher, MessageHandler, filters
from openai import OpenAI
import gspread
from google.oauth2.service_account import Credentials

# OpenAI
client_gpt = OpenAI(api_key=os.environ["MyKey2"])

# Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds_json = os.environ["GOOGLE_CREDS_JSON"]
creds_dict = json.loads(creds_json)
credentials = Credentials.from_service_account_info(creds_dict, scopes=scope)
client_gs = gspread.authorize(credentials)
SPREADSHEET_ID = os.environ["sheets_id"]
sheet = client_gs.open_by_key(SPREADSHEET_ID).sheet1
records = sheet.get_all_records()

# Flask
app = Flask(__name__)

# Telegram
bot = telegram.Bot(token=os.environ["Telegram_Bot_Token"])
dispatcher = Dispatcher(bot, None, workers=0)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
def handle_message(update, context):
    user_message = update.message.text.strip()
    print(f"–ü–û–õ–£–ß–ï–ù –í–û–ü–†–û–°: {user_message}")

    for record in records:
        if record["question"].strip().lower() == user_message.lower():
            print("‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ –±–∞–∑–µ")
            update.message.reply_text(record["answer"])
            return

    prompt = f"""
–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –†–§. –û—Ç–≤–µ—á–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ –§–ó, –ì–û–°–¢, –°–ù–∏–ü, –ü–ü–ë, –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ. –ü–∏—à–∏ –ø–æ–Ω—è—Ç–Ω–æ, –¥–µ–ª–æ–≤—ã–º —è–∑—ã–∫–æ–º.

–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "{user_message}"

–û—Ç–≤–µ—Ç:
"""
    print("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ GPT...")
    response = client_gpt.chat.completions.create(
        model="gpt-4o-mini",
        messages=[
            {"role": "system", "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."},
            {"role": "user", "content": prompt}
        ],
        max_tokens=300,
        temperature=0.3
    )
    gpt_answer = response.choices[0].message.content.strip()
    print(f"‚úÖ –û–¢–í–ï–¢ GPT: {gpt_answer[:200]}...")
    update.message.reply_text(gpt_answer)

dispatcher.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))

# Webhook
@app.route("/", methods=["POST"])
def webhook():
    update = telegram.Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
